# -*- coding: utf-8 -*-
"""06b Holoviews.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/adaapp/dav-introductionToPandas/blob/master/06b%20Holoviews.ipynb
"""

import pandas as pd
import holoviews as hv
hv.extension('bokeh')

dataframe = pd.read_csv("Anthropometric data.csv", thousands=',')
len(dataframe)

"""We're going to take some of this `pandas.DataFrame` and turn it into a `holoviews.Table`.

Holoviews will want to know which columns we are thinking of as *key dimensions* and which are *value dimensions*.

Key and value dimensions are what we might otherwise call:
* independent and dependent variables
* explanatory and response variables
* predictor and response variables
* $X$ and $Y$

Suppose we want to investigate `Weight_N` and `Height_mm` as functions of both `Age_months` and `Gender`.
"""

table = hv.Table(dataframe, vdims=["Weight_N","Height_mm"], kdims=["Age_months","Gender"])
table

"""Now we can get an interactive scatter plot in one line:"""

hv.HoloMap(table.to.scatter(kdims=["Height_mm"],vdims=["Weight_N"]))

"""It's important to understand what's going on behind the scenes. The HoloMap function here is actually pregenerating a separate scatter plot for every possible pair of values of `Age_months` and `Gender`, which is why it takes a while to return.

Perhaps comparative boxplots would be more useful:
"""

hv.HoloMap(table.to.box(vdims=["Height_mm"],kdims=["Gender"],groupby="Age_months"))

dataframe["Age_years"]=dataframe["Age_months"]//12

dataframe["Age_years"]

table = hv.Table(dataframe, vdims=["Weight_N","Height_mm"], kdims=["Age_years","Gender"])
table

hv.HoloMap(table.to.scatter(kdims=["Height_mm"],vdims=["Weight_N"]))

hv.HoloMap(table.to.box(vdims=["Height_mm"],kdims=["Gender"],groupby="Age_years"))